
# type Todo {
#   id: ID!
#   text: String!
#   done: Boolean!
#   user: User!
# }

# type User {
#   id: ID!
#   name: String!
# }

# type Query {
#   todos: [Todo!]!
# }

# input NewTodo {
#   text: String!
#   userId: String!
# }

# type Mutation {
#   createTodo(input: NewTodo!): Todo!
# }

# type Review {
#   body: String
#   author: User @provides(fields: "username")
#   product: Product
# }

# extend type User @key(fields: "id") {
#   reviews: [Review]
# }

# extend type Product @key(fields: "upc") {
#   upc: String! @external # External directive not required for key fields in federation v2
#   reviews: [Review]
# }

type Todo {
  id: ID!
  text: String!
  done: Boolean!
  userId: String!
}

type Query {
  getTodos: [Todo!]!
}

type Mutation {
  createTodo(text: String!, done: Boolean!, userId: String!): Todo!
}