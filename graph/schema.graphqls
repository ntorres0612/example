type User  {
  id: ID!
  username: String!
  password: String!
  customer: Customer!
  affiliation: Affiliation!
}
extend type Customer @key(fields: "id") {
  id: ID! @external
}
extend type Affiliation @key(fields: "id") {
  id: ID! @external
}

type Query {
  getUsers: [User!]!
  getUser(id: ID!): User
}

type Response {
  status: Boolean!
  message: String!
}

input UserInput {
  id: ID
  username: String!
  password: String!
  customer: String!
  affiliation: String!
}

type Mutation {
  createUser(input: UserInput!): User!
  updateUser(input: UserInput!): User!
  deleteUser(id: ID!): Response!
}

